/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_SHATTERED_RAIN_DARK_ID));
    scalableImage1.setPosition(0, 0, 480, 272);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    gauge1.setBackground(touchgfx::Bitmap(BITMAP_GAUGEE1_ID));
    gauge1.setPosition(238, 12, 242, 240);
    gauge1.setCenter(120, 120);
    gauge1.setStartEndAngle(-113, 112);
    gauge1.setRange(0, 100);
    gauge1.setValue(0);
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_NEEDLES_SMOOTH_ID, 7, 67);
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge1.setAlpha(100);
    add(gauge1);

    textBigPress.setPosition(58, 81, 410, 100);
    textBigPress.setColor(touchgfx::Color::getColorFromRGB(226, 242, 0));
    textBigPress.setLinespacing(0);
    Unicode::snprintf(textBigPressBuffer, TEXTBIGPRESS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XHK9).getText());
    textBigPress.setWildcard(textBigPressBuffer);
    textBigPress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T75B));
    textBigPress.setVisible(false);
    add(textBigPress);

    toggleButton1.setXY(0, 0);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_OFF_NORMAL_ID));
    toggleButton1.forceState(true);
    toggleButton1.setAction(buttonCallback);
    add(toggleButton1);

    boxWithBorder2.setPosition(156, 70, 190, 111);
    boxWithBorder2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2.setBorderColor(touchgfx::Color::getColorFromRGB(128, 54, 54));
    boxWithBorder2.setBorderSize(5);
    boxWithBorder2.setAlpha(0);
    add(boxWithBorder2);

    staticText2.setXY(3, 169);
    staticText2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    staticText2.setLinespacing(0);
    staticText2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HV30));
    staticText2.setAlpha(100);
    add(staticText2);

    staticText3.setXY(3, 197);
    staticText3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    staticText3.setLinespacing(0);
    staticText3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DRP6));
    staticText3.setAlpha(100);
    add(staticText3);

    circleStatus.setPosition(58, 141, 80, 80);
    circleStatus.setCenter(40, 40);
    circleStatus.setRadius(12);
    circleStatus.setLineWidth(0);
    circleStatus.setArc(0, 360);
    circleStatusPainter.setColor(touchgfx::Color::getColorFromRGB(143, 130, 130));
    circleStatus.setPainter(circleStatusPainter);
    add(circleStatus);

    circlePower.setPosition(138, 169, 80, 80);
    circlePower.setCenter(40, 40);
    circlePower.setRadius(12);
    circlePower.setLineWidth(0);
    circlePower.setArc(0, 360);
    circlePowerPainter.setColor(touchgfx::Color::getColorFromRGB(143, 130, 130));
    circlePower.setPainter(circlePowerPainter);
    add(circlePower);

    textArea1.setPosition(0, 104, 207, 50);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4GPI).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3HTH));
    textArea1.setAlpha(100);
    add(textArea1);

    boxWithBorder1.setPosition(148, 70, 211, 111);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(128, 54, 54));
    boxWithBorder1.setBorderSize(5);
    boxWithBorder1.setAlpha(0);
    add(boxWithBorder1);

    warningText.setPosition(156, 84, 190, 61);
    warningText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    warningText.setLinespacing(0);
    warningText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PPZH));
    warningText.setAlpha(0);
    add(warningText);

    pinVolt.setPosition(138, 0, 138, 24);
    pinVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    pinVolt.setLinespacing(0);
    Unicode::snprintf(pinVoltBuffer, PINVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_370H).getText());
    pinVolt.setWildcard(pinVoltBuffer);
    pinVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O6I));
    add(pinVolt);

    statVolt.setPosition(255, 0, 138, 24);
    statVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    statVolt.setLinespacing(0);
    Unicode::snprintf(statVoltBuffer, STATVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_90NX).getText());
    statVolt.setWildcard(statVoltBuffer);
    statVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_67WH));
    add(statVolt);

    realVolt.setPosition(196, 0, 138, 24);
    realVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    realVolt.setLinespacing(0);
    Unicode::snprintf(realVoltBuffer, REALVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7KWE).getText());
    realVolt.setWildcard(realVoltBuffer);
    realVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BJOS));
    add(realVolt);

    powerVolt.setPosition(334, 0, 138, 24);
    powerVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    powerVolt.setLinespacing(0);
    Unicode::snprintf(powerVoltBuffer, POWERVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_X6MM).getText());
    powerVolt.setWildcard(powerVoltBuffer);
    powerVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A6Y5));
    add(powerVolt);

    staticText1.setXY(-1, 70);
    staticText1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    staticText1.setLinespacing(0);
    staticText1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A67O));
    staticText1.setAlpha(100);
    add(staticText1);

    viewButton.setXY(3, 229);
    viewButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    viewButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_R42K));
    viewButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    viewButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    viewButton.setAction(buttonCallback);
    add(viewButton);

    viewButton_1.setXY(110, 229);
    viewButton_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    viewButton_1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_TTV3));
    viewButton_1.setLabelColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    viewButton_1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    viewButton_1.setAction(buttonCallback);
    add(viewButton_1);

    shape_up.setPosition(285, 181, 84, 68);
    shape_up.setOrigin(0.0f, 0.0f);
    shape_up.setScale(1.0f, 1.0f);
    shape_up.setAngle(0.0f);
    shape_upPainter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    shape_up.setPainter(shape_upPainter);
    const touchgfx::AbstractShape::ShapePoint<float> shape_upPoints[3] = { { 40.0f, 20.0f }, { 60.0f, 40.0f }, { 20.0f, 40.0f } };
    shape_up.setShape(shape_upPoints);
    shape_up.setVisible(false);
    add(shape_up);

    shape_down.setPosition(348, 165, 80, 80);
    shape_down.setOrigin(0.0f, 0.0f);
    shape_down.setScale(1.0f, 1.0f);
    shape_down.setAngle(0.0f);
    shape_downPainter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    shape_down.setPainter(shape_downPainter);
    const touchgfx::AbstractShape::ShapePoint<float> shape_downPoints[3] = { { 60.0f, 40.0f }, { 40.0f, 60.0f }, { 20.0f, 40.0f } };
    shape_down.setShape(shape_downPoints);
    shape_down.setVisible(false);
    add(shape_down);

    noPowerTxt.setXY(13, 50);
    noPowerTxt.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    noPowerTxt.setLinespacing(0);
    noPowerTxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T9G6));
    noPowerTxt.setVisible(false);
    add(noPowerTxt);

    highRadio.setXY(213, 230);
    highRadio.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_ON_PRESSED_ID));
    highRadio.setSelected(true);
    highRadio.setDeselectionEnabled(false);
    highRadio.setVisible(false);
    radioButtonGroup1.add(highRadio);
    add(highRadio);

    lowRadio.setXY(265, 231);
    lowRadio.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_ON_PRESSED_ID));
    lowRadio.setSelected(false);
    lowRadio.setDeselectionEnabled(false);
    lowRadio.setVisible(false);
    radioButtonGroup1.add(lowRadio);
    add(lowRadio);

    mediumRadio.setXY(239, 230);
    mediumRadio.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_SMALL_ROUND_ON_PRESSED_ID));
    mediumRadio.setSelected(false);
    mediumRadio.setDeselectionEnabled(false);
    mediumRadio.setVisible(false);
    radioButtonGroup1.add(mediumRadio);
    add(mediumRadio);

    textArea_H.setXY(218, 249);
    textArea_H.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_H.setLinespacing(0);
    textArea_H.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YAI0));
    textArea_H.setVisible(false);
    add(textArea_H);

    textArea_L.setXY(273, 249);
    textArea_L.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_L.setLinespacing(0);
    textArea_L.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GUU2));
    textArea_L.setVisible(false);
    add(textArea_L);

    textArea_M.setXY(243, 249);
    textArea_M.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_M.setLinespacing(0);
    textArea_M.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EL3P));
    textArea_M.setVisible(false);
    add(textArea_M);

    yesButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_30_30_48FF00_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_30_30_48FF00_SVG_ID));
    yesButton.setIconXY(0, 0);
    yesButton.setVisible(false);
    yesButton.setAction(flexButtonCallback);
    yesButton.setPosition(265, 143, 36, 40);
    add(yesButton);

    noButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_CLOSE_30_30_FF0000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_CLOSE_30_30_FF0000_SVG_ID));
    noButton.setIconXY(0, 0);
    noButton.setVisible(false);
    noButton.setAction(flexButtonCallback);
    noButton.setPosition(203, 145, 30, 36);
    add(noButton);

    statusText.setXY(173, 93);
    statusText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    statusText.setLinespacing(0);
    statusText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9IE7));
    statusText.setAlpha(0);
    add(statusText);

    powerText.setXY(173, 133);
    powerText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    powerText.setLinespacing(0);
    powerText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YDRD));
    powerText.setAlpha(0);
    add(powerText);
}

Screen1ViewBase::~Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call onOffClicked
        onOffClicked();
    }
    if (&src == &viewButton)
    {
        //Interaction2
        //When viewButton clicked call virtual function
        //Call changeView
        changeView();
    }
    if (&src == &viewButton_1)
    {
        //Interaction3
        //When viewButton_1 clicked call virtual function
        //Call secureOnOff
        secureOnOff();
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &yesButton)
    {
        //Interaction4
        //When yesButton clicked call virtual function
        //Call yesButtonClicked
        yesButtonClicked();
    }
    if (&src == &noButton)
    {
        //Interaction5
        //When noButton clicked call virtual function
        //Call noButtonClicked
        noButtonClicked();
    }
}
